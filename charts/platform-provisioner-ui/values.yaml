#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

# Default values for platform-provisioner-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/stratosphere/cic2-web-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecret:
  create: false
  secret: ""
  labels:
    github.com/token-name: image-pull

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: platform-provisioner.localhost
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2000Mi
  # requests:
  #   cpu: 100m
  #   memory: 300Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  failureThreshold: 1
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /
    port: http
  failureThreshold: 1
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

guiConfig:
  pipelineNamespace: "tekton-tasks"
  pipelineTemplateLabelKey: "env.cloud.tibco.com/config"
  pipelineTemplateLabelValue: "pipeline-gui-config"
  pipelineRunCancelled: "Cancelled"
  startLocally: "false"
  onPremMode: "false"
  # the name of the config map that holds the config data for this gui
  dataConfigMapName: ""
  tektonAPIVersion: "v1"
  pipelinesCleanUpEnabled: "false"

sso:
  # for all day's work
  timeoutInHours: 8
  # the ssoIssuer that this gui will use
  issuer: ""
  entryPoint: ""
  logoutUrl: ""
  loginCallbackPath: ""
  logoutCallbackPath: ""
  pem:
    private: ""
    public: ""
