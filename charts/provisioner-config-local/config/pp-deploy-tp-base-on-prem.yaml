#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

pipelineName: "Deploy TIBCO Platform On-Prem Stack"
description: |
  This pipeline will deploy supporting tools for TP Cluster on-prem without certificate.
groups:
- title: "Chart Repository"
  index: 1
  description: |
    ## TIBCO Platform CP and DP chart repositories.
    
    * The pipeline will provide github token inside container. You don't need to set this. 
    
    ---
- title: "Container Registry"
  index: 2
  description: |
    ## Container Registry config
    * TIBCO Platform use jFrog to distribute the docker images. 
    * We need to set the username and password to access the images.
    * `csgprdusw2reposaas.jfrog.io` for master node. Master node has dev images. 
    * `csgprduswrepoedge.jfrog.io` (US) `csgprdeuwrepoedge.jfrog.io` (EU) for edge node. Edge node has prod images only.

    ---
- title: "Cluster Ingress"
  index: 6
  description: |
    Cluster Ingress configurations.
    * domain: `*.localhost.dataplanes.pro` point to `127.0.0.1`.
    * ingress service type: We can only have `ONE` main ingress uses service type `LoadBalancer` for on-prem setup.
- title: "Cluster storage"
  index: 7
  description: |
    Cluster storage specific configurations. For the on-prem setup we have
    * Docker Desktop: `hostpath` (support ReadWriteMany)
    * minikube: `standard` (support ReadWriteMany)
    * kind: `standard` (Don't support ReadWriteMany)
    * MicroK8s: `microk8s-hostpath` (support ReadWriteMany)
    * OpenShift: `crc-csi-hostpath-provisioner` (Don't support ReadWriteMany)
    * NFS server provisioner: `nfs` (support ReadWriteMany)
- title: "Database"
  index: 8
  description: |
    DB specific configurations. The default value is for postgres pod.
- title: "Flow control"
  index: 10
  description: |
    Change the installation flow control options.
    * Postgres database is optional if you only want to create a DP Cluster.
    * Install provisioner UI ingress for the on-prem setup. You can then access provisioner UI at [https://provisioner.localhost.dataplanes.pro](https://provisioner.localhost.dataplanes.pro)
options:
# groupIndex: 1 Chart Repository
- name: "TP Chart repository"
  groupIndex: 1
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CHART_REPO"
  description: "The TIBCO Platform chart repository. (optional)"
- name: "TP Chart repository user name"
  groupIndex: 1
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CHART_REPO_USER_NAME"
  description: "The TIBCO Platform chart repository user name. (optional)"
- name: "Chart repository token"
  groupIndex: 1
  type: password
  guiType: input
  reference: "meta.guiEnv.GUI_GITHUB_TOKEN"
  description: "TIBCO TP internal GitHub token (optional)"

# groupIndex: 2 Container Registry
- name: "Container Registry"
  groupIndex: 2
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONTAINER_REGISTRY_URL"
  description: |
    The container registry. csgprdusw2reposaas.jfrog.io for master node. csgprduswrepoedge.jfrog.io for edge node. Master node has dev images. Edge node has prod images.
- name: "Container Registry Repository"
  groupIndex: 2
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONTAINER_REGISTRY_REPOSITORY"
  description: |
    The container registry repository. tibco-platform-docker-prod for production. tibco-platform-docker-dev for development
- name: "Container Registry Username"
  groupIndex: 2
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONTAINER_REGISTRY_USER"
  description: |
    The container registry username
- name: "Container Registry Password"
  groupIndex: 2
  type: password
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONTAINER_REGISTRY_PASSWORD"
  description: |
    The container registry password

# groupIndex: 6 Cluster Ingress Configuration
- name: "TP ingress DNS domain"
  groupIndex: 6
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DNS_DOMAIN"
  description: |
    The TP Cluster DNS domain. localhost.dataplanes.pro is designed for local use
- name: "TP ingress service type"
  groupIndex: 6
  labels:
    - "ClusterIP"
    - "LoadBalancer"
    - "NodePort"
    - "hostPort"
  values:
    - "ClusterIP"
    - "LoadBalancer"
    - "NodePort"
    - "hostPort"
  type: string
  guiType: radio
  reference: "meta.guiEnv.GUI_TP_INGRESS_SERVICE_TYPE"
  description: |
    We suggest to use "LoadBalancer" for Docker Desktop. Use "ClusterIP" and use kubectl port-forward for other local cluster.
- name: "Install Nginx Ingress"
  groupIndex: 6
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_NGINX_INGRESS"
- name: "Install Traefik Ingress"
  groupIndex: 6
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_TRAEFIK_INGRESS"
  description: |
    Traefik dashboard will be available at: https://dashboard.localhost.dataplanes.pro/dashboard/#/

# groupIndex: 7 Cluster storage
- name: "TP Cluster storage class"
  groupIndex: 7
  type: string
  guiType: input
  required: true
  reference: "meta.guiEnv.GUI_TP_STORAGE_CLASS"
  description: |
    The storage class for the TP Cluster.
- name: "Storage class name for NFS server provisioner"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_STORAGE_CLASS_FOR_NFS_SERVER_PROVISIONER"
  description: |
    The storage class name that NFS server provisioner will use. Empty means use the default storage class.
- name: "NFS server provisioner storage class name"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_NFS_SERVER_PROVISIONER_STORAGE_CLASS_NAME"
  description: |
    The storage class name that NFS server provisioner will create for the TP Cluster.
- name: "NFS server provisioner size"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_NFS_SERVER_PROVISIONER_SIZE"
  description: |
    The size of the NFS server provisioner storage.

# groupIndex: 8 Database
- name: "DB user name"
  groupIndex: 8
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DB_USER_NAME"
  required: true
  description: |
    The DB user name. If you provisioner postgres pod; you can use "postgres". If you create RDS; you need to use the RDS master user name.
- name: "DB password"
  groupIndex: 8
  type: password
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DB_PASSWORD"
  #  required: true # cannot set required because of bug
  description: |
    The DB password. If you provisioner postgres pod; you can use "postgres". If you create RDS; you need to use the RDS master password.
- name: "DB name"
  groupIndex: 8
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DB_NAME"
  description: |
    The Database name
- name: "Enable Postgres TLS"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_DB_TLS_ENABLED"
  description: |
    Enable TLS for Postgres

# groupIndex: 10 Flow control
- name: "Install cert-manager"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_CERT_MANAGER"
  description: |
    Install cert-manager for TP Cluster
- name: "Install metrics-server"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_METRICS_SERVER"
  description: |
    Install metrics-server for TP Cluster
- name: "Install nfs-server-provisioner"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_NFS_SERVER_PROVISIONER"
  description: |
    Install NFS server provisioner for TP Cluster
- name: "Install Postgres"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_POSTGRES"
  description: |
    Install Postgres database for TP Cluster
- name: "Install Calico"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_CALICO_CNI"
  description: |
    Enable Calico CNI for TP Cluster. Set to `true` for network policy testing.
- name: "Install Provisioner UI Ingress object"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_PROVISIONER_UI"
  description: |
    This will update Provisioner UI ingress
- name: "Provisioner UI Ingress class name"
  groupIndex: 10
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_PROVISIONER_UI_INGRESS_CLASSNAME"
  description: |
    Ingress class name for Provisioner UI. Default is `nginx`
- name: "Provisioner UI namespace"
  groupIndex: 10
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_PROVISIONER_UI_NAMESPACE"
  description: |
    Namespace for Provisioner UI. Default is `tekton-tasks`
- name: "Install Automation UI"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_AUTOMATION_INSTALL"
  description: |
    Install Automation UI for TP Cluster. Default is `false`
- name: "Enable pipline debug logs"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_PIPELINE_LOG_DEBUG"
  description: "Enable debug logs for the pipeline"
recipe: |
{{ .Files.Get "recipes/tp-base-on-prem.yaml" | indent 2 }}
