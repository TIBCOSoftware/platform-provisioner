#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

pipelineName: "Deploy TIBCO Platform On-Prem Stack"
description: |
  This pipeline will deploy supporting tools for TP Cluster on-prem without certificate.
groups:
- title: "Cluster Ingress"
  index: 1
  description: |
    Cluster Ingress configurations. 
    * domain: `*.localhost.dataplanes.pro` point to `127.0.0.1`.
    * ingress service type: We can only have `ONE` main ingress uses service type `LoadBalancer` for on-perm setup.
- title: "Cluster storage"
  index: 7
  description: |
    Cluster storage specific configurations. For the on-perm setup we have
    * Docker Desktop: `hostpath` (support ReadWriteMany)
    * minikube: `standard` (support ReadWriteMany)
    * kind: `standard` (Don't support ReadWriteMany)
    * MicroK8s: `microk8s-hostpath` (support ReadWriteMany)
    * OpenShift: `crc-csi-hostpath-provisioner` (Don't support ReadWriteMany)
    * NFS server provisioner: `nfs` (support ReadWriteMany)
- title: "Cluster tools"
  index: 8
  description: |
    Cluster tools specific configurations.
    * Postgres database is optional if you only want to create a DP Cluster.
    * Install provisioner UI ingress for the on-prem setup. You can then access provisioner UI at [https://provisioner.localhost.dataplanes.pro](https://provisioner.localhost.dataplanes.pro)
- title: "Flow control"
  index: 10
  description: |
    Change the installation flow control options.
options:
# groupIndex: 1 Cluster Ingress Configuration
- name: "TP ingress DNS domain"
  groupIndex: 1
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DNS_DOMAIN"
  description: |
    The TP Cluster DNS domain. localhost.dataplanes.pro is designed for local use
- name: "TP ingress service type"
  groupIndex: 1
  labels:
    - "ClusterIP"
    - "LoadBalancer"
    - "NodePort"
    - "hostPort"
  values:
    - "ClusterIP"
    - "LoadBalancer"
    - "NodePort"
    - "hostPort"
  type: string
  guiType: radio
  reference: "meta.guiEnv.GUI_TP_INGRESS_SERVICE_TYPE"
  description: |
    We suggest to use "LoadBalancer" for Docker Desktop. Use "ClusterIP" and use kubectl port-forward for other local cluster.
- name: "Install Nginx Ingress"
  groupIndex: 1
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_NGINX_INGRESS"
- name: "Install Traefik Ingress"
  groupIndex: 1
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_TRAEFIK_INGRESS"
  description: |
    Traefik dashboard will be available at: https://dashboard.localhost.dataplanes.pro/dashboard/#/

# groupIndex: 7 Cluster storage
- name: "TP Cluster storage class"
  groupIndex: 7
  type: string
  guiType: input
  required: true
  reference: "meta.guiEnv.GUI_TP_STORAGE_CLASS"
  description: |
    The storage class for the TP Cluster.
- name: "Storage class name for NFS server provisioner"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_STORAGE_CLASS_FOR_NFS_SERVER_PROVISIONER"
  description: |
    The storage class name that NFS server provisioner will use. Empty means use the default storage class.
- name: "NFS server provisioner storage class name"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_NFS_SERVER_PROVISIONER_STORAGE_CLASS_NAME"
  description: |
    The storage class name that NFS server provisioner will create for the TP Cluster.
- name: "NFS server provisioner size"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_NFS_SERVER_PROVISIONER_SIZE"
  description: |
    The size of the NFS server provisioner storage.

# groupIndex: 8 Cluster tools
- name: "Install cert-manager"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_CERT_MANAGER"
  description: |
    Install cert-manager for TP Cluster
- name: "Install metrics-server"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_METRICS_SERVER"
  description: |
    Install metrics-server for TP Cluster
- name: "Install nfs-server-provisioner"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_NFS_SERVER_PROVISIONER"
  description: |
    Install NFS server provisioner for TP Cluster
- name: "Install Postgres"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_POSTGRES"
  description: |
    Install Postgres database for TP Cluster
- name: "Install Provisioner UI Ingress object"
  groupIndex: 8
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_INSTALL_PROVISIONER_UI"
  description: |
    This will update Provisioner UI ingress
- name: "Provisioner UI Ingress class name"
  groupIndex: 8
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_PROVISIONER_UI_INGRESS_CLASSNAME"
  description: |
    Ingress class name for Provisioner UI. Default is `nginx`
- name: "Provisioner UI namespace"
  groupIndex: 8
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_PROVISIONER_UI_NAMESPACE"
  description: |
    Namespace for Provisioner UI. Default is `tekton-tasks`

# groupIndex: 10 Flow control
- name: "Enable pipline debug logs"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_PIPELINE_LOG_DEBUG"
  description: "Enable debug logs for the pipeline"
recipe: |
{{ .Files.Get "recipes/tp-base-on-prem.yaml" | indent 2 }}
