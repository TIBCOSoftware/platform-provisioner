#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

pipelineName: "Create secret for TIBCO Hub"
description: |
  This pipeline is a helper to create secret for TIBCO Hub.
options:
  - name: "GUI_DP_GITHUB_TOKEN"
    type: string
    guiType: input
    reference: "meta.guiEnv.GUI_DP_GITHUB_TOKEN"
    required: true
    description: "GitHub token for TIBCO Hub"
  - name: "GUI_DP_SECRET_NAME"
    type: string
    guiType: input
    reference: "meta.guiEnv.GUI_DP_SECRET_NAME"
    required: true
    description: "Name of the secret to be created in the namespace"
  - name: "GUI_DP_SECRET_NAMESPACE"
    type: string
    guiType: input
    reference: "meta.guiEnv.GUI_DP_SECRET_NAMESPACE"
    required: true
    description: "Namespace to install the secret"
  - name: "GUI_PIPELINE_LOG_DEBUG"
    type: boolean
    guiType: checkbox
    reference: "meta.guiEnv.GUI_PIPELINE_LOG_DEBUG"
recipe: |
  apiVersion: v1
  kind: generic-runner
  meta:
    guiEnv:
      note: "deploy-secret-tibco-hub"
      GUI_DP_GITHUB_TOKEN: ""
      GUI_DP_SECRET_NAME: ""
      GUI_DP_SECRET_NAMESPACE: ""
      GUI_PIPELINE_LOG_DEBUG: false
    globalEnvVariable:
      REPLACE_RECIPE: true
      PIPELINE_LOG_DEBUG: ${GUI_PIPELINE_LOG_DEBUG}
      PIPELINE_CHECK_DOCKER_STATUS: false
      # DP settings
      DP_GITHUB_TOKEN: ${GUI_DP_GITHUB_TOKEN}
      DP_SECRET_NAME: ${GUI_DP_SECRET_NAME}
      DP_SECRET_NAMESPACE: ${GUI_DP_SECRET_NAMESPACE}
  tasks:
    - condition: true
      script:
        ignoreErrors: false
        fileName: script.sh
        content: |
          kubectl delete secret --namespace ${DP_SECRET_NAMESPACE} ${DP_SECRET_NAME} 2>/dev/null
          token=$(echo "${DP_GITHUB_TOKEN}" | base64)
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: ${DP_SECRET_NAME}
            namespace: ${DP_SECRET_NAMESPACE}
          type: Opaque
          data:
            GITHUB_TOKEN: ${token}
          EOF


