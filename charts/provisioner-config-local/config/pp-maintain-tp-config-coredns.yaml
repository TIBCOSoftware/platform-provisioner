pipelineName: "Config CoreDNS"
description: |
  This pipeline will config CoreDNS for the TP cluster. It will add a rewrite rule to Corefile to rewrite the domain name to the target service.
  This is designed to work with domain like `*.localhost.dataplanes.pro` to rewrite to 
  * `ingress-nginx-controller.ingress-system.svc.cluster.local` for nginx
  * `traefik.ingress-system.svc.cluster.local` for traefik
  
  The domain `*.localhost.dataplanes.pro` is pointing to 127.0.0.1. We need to redirect it to the target ingress service.
  
  This script is idempotent. It will only add the rewrite rule if it does not exist.
  
  The CoreDNS pod will be restarted after the change.
  
  In order to avoid deal with escape characters in the regex pattern, we use base64 format of the regex pattern. 
  Use this command to generate the base64 format of the regex pattern:
  ```bash
  echo '(.*)\.localhost\.dataplanes\.pro' | base64
  ```
options:
- name: "The target service"
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TARGET_SERVICE"
  required: true
  description: |
    The target service to rewrite the domain name to. For ngixn: `ingress-nginx-controller.ingress-system.svc.cluster.local`
    For traefik: `traefik.ingress-system.svc.cluster.local`
- name: "The regex domain pattern in base64"
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_REGEX_PATTERN_BASE64"
  required: true
  description: |
    Base64 format of the regex pattern to match the domain name. The default value is: `(.*)\.localhost\.dataplanes\.pro`
recipe: |
  apiVersion: v1
  kind: generic-runner
  meta:
    guiEnv:
      note: "config-coredns"
      GUI_PIPELINE_LOG_DEBUG: false
      GUI_TARGET_SERVICE: "ingress-nginx-controller.ingress-system.svc.cluster.local"
      GUI_REGEX_PATTERN_BASE64: "KC4qKVwubG9jYWxob3N0XC5kYXRhcGxhbmVzXC5wcm8K"
    globalEnvVariable:
      REPLACE_RECIPE: true
      PIPELINE_LOG_DEBUG: ${GUI_PIPELINE_LOG_DEBUG:-false}
      REGEX_PATTERN_BASE64: ${GUI_REGEX_PATTERN_BASE64:-"KC4qKVwubG9jYWxob3N0XC5kYXRhcGxhbmVzXC5wcm8K"}
      TARGET_SERVICE: ${GUI_TARGET_SERVICE:-"ingress-nginx-controller.ingress-system.svc.cluster.local"}
  tasks:
    - condition: true
      clusters:
        - name: ${TP_CLUSTER_NAME}
      script:
        ignoreErrors: false
        fileName: script.sh
        content: |
          #!/bin/bash
          REGEX_PATTERN=$(echo $REGEX_PATTERN_BASE64 | base64 --decode)
          kubectl get configmap coredns -n kube-system -o json | jq --arg regex "$REGEX_PATTERN" --arg target "$TARGET_SERVICE" '
            .data.Corefile |=
            if (. | test("rewrite name regex \\Q" + $regex + "\\E " + $target)) then
              # If the rewrite rule already exists, leave the Corefile unchanged
              .
            else
              # If the rewrite rule does not exist, insert it after the "ready" line
              (split("\n") | map(
                if test("^\\s*ready") then
                  . + "\n    rewrite name regex " + $regex + " " + $target
                else
                  .
                end
              ) | join("\n"))
            end
          ' > coredns-updated.json

          
          kubectl apply -f coredns-updated.json
  
          kubectl rollout restart deployment coredns -n kube-system
