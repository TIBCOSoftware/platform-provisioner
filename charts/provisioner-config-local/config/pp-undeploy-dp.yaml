pipelineName: "Data Plane information"
description: |
  This pipeline will output TIBCO Data Plane information.
options:
  - name: "DP_NAMESPACE"
    type: string
    guiType: input
    reference: "meta.guiEnv.GUI_DP_NAMESPACE"
    required: true
    description: "Namespace to install the ECR secret"
  - name: "DATAPLANE_ID"
    type: string
    guiType: input
    reference: "meta.guiEnv.GUI_DP_DATAPLANE_ID"
    description: "Data Plane ID installed in this cluster"
recipe: |
  apiVersion: v1
  kind: generic-runner
  meta:
    guiEnv:
      note: "undeploy-dp"
      GUI_DP_CLUSTER_NAME: ''
      GUI_DP_NAMESPACE: ''
      GUI_DP_DATAPLANE_ID: ""
      GUI_PIPELINE_LOG_DEBUG: false
    globalEnvVariable:
      REPLACE_RECIPE: true
      PIPELINE_LOG_DEBUG: ${GUI_PIPELINE_LOG_DEBUG}
      PIPELINE_CHECK_DOCKER_STATUS: false
      DP_CLUSTER_NAME: ${GUI_DP_CLUSTER_NAME}
      DP_NAMESPACE: ${GUI_DP_NAMESPACE}
      DP_DATAPLANE_ID: ${GUI_DP_DATAPLANE_ID}
  tasks:
    - condition: true
      clusters:
        - name: ${DP_CLUSTER_NAME}
      script:
        ignoreErrors: false
        fileName: script.sh
        content: |
          if [[ -n "${DP_DATAPLANE_ID}" ]]; then
            release_names=$(helm ls -A -l "platform.tibco.com/dataplaneId=${DP_DATAPLANE_ID}" -o yaml | yq .[].name)
            for name in $release_names; do
              echo "Deleting release: $name"
              helm del -n ${DP_NAMESPACE} "$name"
            done
          fi
          helm uninstall -n ${DP_NAMESPACE} dp-core-infrastructure 
          helm uninstall -n ${DP_NAMESPACE} dp-configure-namespace
          kubectl delete ns ${DP_NAMESPACE}
