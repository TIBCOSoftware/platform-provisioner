#
# Copyright Â© 2024. Cloud Software Group, Inc.
# This file is subject to the license terms contained
# in the license file that is distributed with this file.
#

pipelineName: "Deploy O11y Stack"
description: |
  Deploy O11y Stack on EKS cluster. This pipeline will create a new EKS cluster and deploy O11y Stack on it.
  
  For more details see: [link](https://docs.google.com/document/d/1IRZTO5tDh4EbcQUgoD1TZn8yalHH30zdQBYRUKlVAp8/edit?pli=1#heading=h.66aq0wpdolb9)
groups:
- title: "Chart Repository"
  index: 1
  description: |
    ## TIBCO Platform CP and DP chart repositories. 
    * For the public repo we don't need to set the token.
    * This is only used for dp-config-es chart.
    ---
- title: "Elasticsearch"
  index: 3
  description: |
    ## Change the Elasticsearch options.
    * eck-operator is used to deploy Elasticsearch on Kubernetes.
    * dp-config-es is used to deploy Elasticsearch, Kibana, and APM on Kubernetes.
      * dp-config-es contains index templates.
    ---
- title: "Prometheus"
  index: 4
  description: |
    ## Change the Prometheus options.
    * kube-prometheus-stack is used to deploy Prometheus on Kubernetes. [link](https://github.com/prometheus-community/helm-charts/releases?q=kube-prometheus-stack&expanded=true)
    ---
- title: "Open Telemetry"
  index: 5
  description: |
    ## Change the Open Telemetry options.
    * Open Telemetry Collector is used to collect metrics and logs. [link](https://github.com/open-telemetry/opentelemetry-helm-charts/releases?q=opentelemetry-collector&expanded=true)
    ---
- title: "Ingress"
  index: 6
  description: |
    ## O11y ingress specific configurations. 
    * Normally we use localhost.dataplanes.pro or localhost as on-perm domain.
    * The service will be like: https://kibana.localhost.dataplanes.pro/ or http://kibana.localhost/
    ---
- title: "Cluster storage"
  index: 7
  description: |
    ## Cluster storage specific configurations.
    * For the on-perm setup we have
      * Docker Desktop: `hostpath` (support ReadWriteMany)
      * minikube: `standard` (support ReadWriteMany)
      * kind: `standard` (Don't support ReadWriteMany)
      * MicroK8s: `microk8s-hostpath` (support ReadWriteMany)
      * OpenShift: `crc-csi-hostpath-provisioner` (Don't support ReadWriteMany)
      * NFS server provisioner: `nfs` (support ReadWriteMany)
    ---
- title: "Flow control"
  index: 10
  description: |
    ## Change the installation flow control options.
    * Select the o11y stack you want to deploy.
    ---
options:
# groupIndex: 1 Chart Repository
- name: "TP Chart repo"
  groupIndex: 1
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CHART_REPO"
  description: |
    The helm chart repository to deploy TP. The default value is public repo. To use private repo set: https://raw.githubusercontent.com/tibco/tp-helm-charts/gh-pages and set `GUI_TP_CHART_REPO_TOKEN`
- name: "TP Chart repo user name"
  groupIndex: 1
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CHART_REPO_USER_NAME"
  description: "The TP chart repository user name. (optional)"
- name: "TP Chart repo token"
  groupIndex: 1
  type: password
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CHART_REPO_TOKEN"
  description: |
    (optional)  The helm chart registry password to deploy TP

# groupIndex: 3 Elasticsearch
- name: "Elasticsearch namespace"
  groupIndex: 3
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONFIG_ES_NAMESPACE"
  required: true
- name: "ECK operator version"
  groupIndex: 3
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_ECK_VERSION"
  description: |
    The version of Elastic Cloud on Kubernetes (ECK). 
    see: <a href='https://github.com/elastic/cloud-on-k8s/releases' target='_blank'>link</a>
- name: "Elasticsearch version"
  groupIndex: 3
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONFIG_ES_VERSION"
  required: true
  description: |
    The version of Elasticsearch.
    see: <a href='https://github.com/elastic/elasticsearch/releases' target='_blank'>link</a>
- name: "dp-config-es chart version"
  groupIndex: 3
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_CONFIG_CHART_VERSION"
  required: true
  description: |
    The version of dp-config-es helm chart. 
    see: <a href='https://github.com/TIBCOSoftware/tp-helm-charts/releases?q=dp-config-es&expanded=true' target='_blank'>link</a>

# groupIndex: 4 Prometheus
- name: "Prometheus stack chart version"
  groupIndex: 4
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_KUBE_PROMETHEUS_STACK_VERSION"
  required: true
  description: |
    The version of Prometheus stack helm chart. 
- name: "Prometheus stack chart values:"
  groupIndex: 4
  type: string
  guiType: textarea
  reference: "helmCharts[2].values.content"
  lang: "yaml"

# groupIndex: 5 Open Telemetry
- name: "Open Telemetry Collector version"
  groupIndex: 5
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_OPEN_TELEMETRY_COLLECTOR_VERSION"
  description: |
    The version of opentelemetry-collector helm chart. 
    see: <a href='https://github.com/open-telemetry/opentelemetry-helm-charts/releases?q=opentelemetry-collector&expanded=true' target='_blank'>link</a>
- name: "opentelemetry-collector chart values:"
  groupIndex: 5
  type: string
  guiType: textarea
  reference: "helmCharts[3].values.content"
  lang: "yaml"

# groupIndex: 6 Ingress
- name: "O11y domain"
  groupIndex: 6
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_DOMAIN"
  description: |
    The domain for o11y stack.
- name: "O11y ingress class"
  groupIndex: 6
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_INGRESS_CLASS"
  required: true
  description: |
    The ingress class name for O11y. Default is nginx, you can use traefik too

# groupIndex: 7 storage
- name: "O11y storage class"
  groupIndex: 7
  type: string
  guiType: input
  reference: "meta.guiEnv.GUI_TP_STORAGE_CLASS"
  required: true
  description: |
    hostpath for docker desktop, standard for minikube and kind, microk8s-hostpath for microk8s

# groupIndex: 10 flow control
- name: "Deploy ECK stack"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_DEPLOY_ECK"
- name: "Deploy Prometheus stack"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_DEPLOY_PROMETHEUS_STACK"
- name: "Deploy Open Telemetry Collector"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_TP_DEPLOY_OPEN_TELEMETRY_COLLECTOR"
- name: "Enable pipeline debug logging"
  groupIndex: 10
  type: boolean
  guiType: checkbox
  reference: "meta.guiEnv.GUI_PIPELINE_LOG_DEBUG"
recipe: |
{{ .Files.Get "recipes/pp-o11y-full.yaml" | indent 2 }}
